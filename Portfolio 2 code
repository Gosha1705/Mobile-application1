import 'package:flutter/material.dart';

void main() {
  runApp(ImageCarouselApp());
}

class ImageCarouselApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Image Carousel',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: ImageCarousel(),
    );
  }
}

class ImageCarousel extends StatefulWidget {
  @override
  _ImageCarouselState createState() => _ImageCarouselState();
}

class _ImageCarouselState extends State<ImageCarousel> {
  int _currentIndex = 0;
  List<String> _imageUrls = [
    'assets/images/dog.jpg', // замените на свои URL-адреса изображений
    'assets/images/dog2.jpg',
    'assets/images/dog3.jpg',
    // добавьте больше URL-адресов изображений при необходимости
  ];

  void _previousImage() {
    setState(() {
      _currentIndex = (_currentIndex - 1) % _imageUrls.length;
    });
  }

  void _nextImage() {
    setState(() {
      _currentIndex = (_currentIndex + 1) % _imageUrls.length;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      body: Column(
        children: [
          Expanded(
            child: Center(
              child: ClipRect(
                child: OverflowBox(
                  maxWidth: double.infinity,
                  maxHeight: double.infinity,
                  child: Image.asset(
                    _imageUrls[_currentIndex],
                    fit: BoxFit.cover,
                    alignment: Alignment.topCenter,
                    width: MediaQuery.of(context).size.height / 2, // Установка ширины изображения на весь экран
                    height: MediaQuery.of(context).size.height / 2, // Установка высоты изображения в половину высоты экрана
                  ),
                ),
              ),
            ),
          ),
          Container(
            color: Colors.black,
            padding: EdgeInsets.symmetric(vertical: 20.0),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                TextButton(
                  onPressed: _previousImage,
                  style: ButtonStyle(
                    backgroundColor: MaterialStateProperty.all<Color>(Colors.blue.withOpacity(0.5)),
                    shape: MaterialStateProperty.all<OutlinedBorder>(
                      RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10.0),
                      ),
                    ),
                    minimumSize: MaterialStateProperty.all<Size>(Size(150, 70)), // установка минимального размера кнопки
                  ),
                  child: Icon(Icons.arrow_back, color: Colors.white),
                ),
                TextButton(
                  onPressed: _nextImage,
                  style: ButtonStyle(
                    backgroundColor: MaterialStateProperty.all<Color>(Colors.blue.withOpacity(0.5)),
                    shape: MaterialStateProperty.all<OutlinedBorder>(
                      RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10.0),
                      ),
                    ),
                    minimumSize: MaterialStateProperty.all<Size>(Size(150, 70)), // установка минимального размера кнопки
                  ),
                  child: Icon(Icons.arrow_forward, color: Colors.white),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}
